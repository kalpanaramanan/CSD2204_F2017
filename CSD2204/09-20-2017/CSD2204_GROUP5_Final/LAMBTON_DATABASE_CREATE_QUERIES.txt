CREATE TABLE STUDENT(
	STUDENTID INTEGER(20) AUTO_INCREMENT,
	STUDENTNO VARCHAR(50) NOT NULL,
	FIRSTNAME VARCHAR(50) NOT NULL,
	LASTNAME VARCHAR(50) NOT NULL,
	GENDER  VARCHAR(50) NOT NULL,
	PERMANENTADDRESS VARCHAR(150) NOT NULL,
	TEMPORARYADDRESS VARCHAR(150),
	CITY VARCHAR(50) NOT NULL,
	COUNTRY  VARCHAR(50) NOT NULL,
	PHONENO VARCHAR(50) NOT NULL,
	EMAILID VARCHAR(50) NOT NULL,
	DATEOFBIRTH DATETIME ,
	DATEOFJOINING DATETIME,
	STARTDATE DATETIME ,
	ENDDATE DATETIME ,
	MODIFIEDDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (STUDENTID,STUDENTNO),
	CHECK (DATEOFBIRTH > CUURENT_DATE),
	CHECK (DATEOFJOINING > DATEOFBIRTH),
	CHECK (ENDDATE > STARTDATE)
);


CREATE TABLE STUDENTEMERGENCY(
	STUDENTEMERGENCYID  INTEGER(20) AUTO_INCREMENT,
	STUDENTNO VARCHAR(50) NOT NULL REFERENCES STUDENT(STUDENTNO),
	CONTACTNAME VARCHAR(50) NOT NULL,
	CONTACTNUMBER VARCHAR(50) NOT NULL,
	RELATION VARCHAR(50) NOT NULL,
	ADDRESS VARCHAR(50) NOT NULL,
	CITY VARCHAR(15) NOT NULL,
	COUNTRY VARCHAR(50) NOT NULL,
	EMAILID VARCHAR(50) ,
	MODIFIEDDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (STUDENTEMERGENCYID)
);

CREATE TABLE DEPARTMENT(	
	DEPARTMENTID  INTEGER(10) AUTO_INCREMENT,
	DEPARTMENTNO  VARCHAR(50) NOT NULL,
	DEPARTMENTNAME VARCHAR(50) NOT NULL,
	HEADOFTHEDEPARTMENT VARCHAR(50) NOT NULL,
	PRIMARY KEY (DEPARTMENTID)
);


CREATE TABLE COURSE(
	COURSEID INTEGER(10) AUTO_INCREMENT,
	COURSECODE VARCHAR(50) NOT NULL,
	COURSENAME VARCHAR(50) NOT NULL,
	NOOFCREDITS INTEGER(10) DEFAULT 1,
	DEPARTMENTID VARCHAR(50)  REFERENCES DEPARTMENT(DEPARTMENTNO),
	STARTDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
	ENDDATE DATETIME,
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (COURSEID,COURSECODE),
	CHECK (ENDDATE > STARTDATE)
);

CREATE TABLE SUBJECT(
	SUBJECTID INTEGER(10) AUTO_INCREMENT,
	SUBJECTCODE VARCHAR(50) NOT NULL,
	SUBJECTNAME VARCHAR(50) NOT NULL,
	SUBJECTCREDIT INTEGER(10) NOT NULL DEFAULT 1,
	COURSEID VARCHAR(50) REFERENCES COURSE(COURSECODE),
	STARTDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
	ENDDATE DATE, 
	GROUPID INTEGER(10),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (SUBJECTID,SUBJECTCODE)
);


CREATE TABLE FACULTY(
	FACULTYID INTEGER(10) AUTO_INCREMENT,
	FACULTYNO VARCHAR(50) NOT NULL,
	FIRSTNAME VARCHAR(50) NOT NULL,
	LASTNAME VARCHAR(50) NOT NULL,
	GENDER VARCHAR(50) NOT NULL,
	PERMANENTADDRESS VARCHAR(50) NOT NULL,
	TEMPORARYADDRESS VARCHAR(50) NOT NULL,
	COUNTRY VARCHAR(50) NOT NULL,
	PHONENO INTEGER(50) NOT NULL,
	EMAILID VARCHAR (50) NOT NULL,
	DATEOFBIRTH DATETIME,
	DATEOFJOINING DATETIME ,
	EMERGENCYCONTACTNAME VARCHAR (50) ,
	EMERGENCYCONTACTNUMBER INTEGER(50) ,
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (FACULTYID,FACULTYNO),
	CHECK (DATEOFBIRTH > CUURENT_DATE),
	CHECK (DATEOFJOINING > DATEOFBIRTH)
);


CREATE TABLE GROUPS(
	GROUPID INTEGER(10) AUTO_INCREMENT,
	SHIFT VARCHAR(50) NOT NULL,
	SEMESTER VARCHAR(50) NOT NULL,
	CLASSROOMNO VARCHAR(50) NOT NULL,
	INTAKE VARCHAR(50) NOT NULL,
	FACULTYID  VARCHAR(50) REFERENCES FACULTY(FACULTYNO),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (GROUPID)
);

CREATE TABLE STUDENTCOURSE(
	STUDENTCOURSEID INTEGER(10) AUTO_INCREMENT,
	STUDENTNO VARCHAR(50) NOT NULL REFERENCES STUDENT(STUDENTNO),
	COURSEID INTEGER(10) NOT NULL REFERENCES COURSE(COURSEID),
	GROUPID INTEGER(10) NOT NULL REFERENCES GROUPS(GROUPID),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (STUDENTCOURSEID,STUDENTNO),
	CHECK (ENDDATE > STARTDATE)
);

CREATE TABLE STUDENTASSIGNMENT(
	STUDENTASSIGNMENTID INTEGER(10) AUTO_INCREMENT,
	STUDENTNO VARCHAR(50) NOT NULL REFERENCES STUDENT(STUDENTNO),
	ASSIGNMENT1TOPIC VARCHAR(50),
	ASSIGNMENT1TOTALPERCENTAGE FLOAT(5,2), 
	ASSIGNMENT1STUDENTOBTAINEDPERCENTAGE FLOAT(5,2), 
	ASSIGNMENT2TOPIC VARCHAR(50),
	ASSIGNMENT2TOTALPERCENTAGE FLOAT(5,2), 
	ASSIGNMENT2STUDENTOBTAINEDPERCENTAGE FLOAT(5,2),
	ASSIGNMENT3TOPIC VARCHAR(50),
	ASSIGNMENT3TOTALPERCENTAGE FLOAT(5,2), 
	ASSIGNMENT3STUDENTOBTAINEDPERCENTAGE FLOAT(5,2),
	LABEXERCISETOTALPERCENTAGE FLOAT(5,2),
	LABEXERCISETOTALPERCENTAGEOBTAINED FLOAT(5,2),
	TOTALMARK FLOAT(5,2),
	STUDENTCOURSEID INTEGER(10) NOT NULL REFERENCES STUDENTCOURSE(STUDENTCOURSEID),
	COMMENTS VARCHAR(50),
	SUBJECTID INTEGER(10) NOT NULL REFERENCES SUBJECT(SUBJECTID),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (STUDENTASSIGNMENTID)
);

CREATE TABLE STUDENTATTENDANCE(
	ATTENDANCEID INTEGER(10) AUTO_INCREMENT,
	ATTENDANCEDATE  TIMESTAMP  DEFAULT CURRENT_TIMESTAMP,
	PRESENT BOOLEAN DEFAULT FALSE,
	NOOFHOURS INTEGER(10) DEFAULT 5,
	STUDENTNO VARCHAR(50) REFERENCES STUDENT(STUDENTNO),
	MODIFIEDDATE TIMESTAMP  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (ATTENDANCEID)
);

CREATE TABLE LOGIN(
	USERID INTEGER(10) AUTO_INCREMENT,
	USERNAME VARCHAR(50) NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (USERID)
);

CREATE TABLE ROLES(
	ROLEID INTEGER(10) AUTO_INCREMENT,
	ROLENAME VARCHAR(50),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1, 
	PRIMARY KEY (ROLEID)
);

CREATE TABLE AUDIT(
	AUDITID INTEGER(10) AUTO_INCREMENT,
	OPERATIONNAME VARCHAR(50),
	MODIFIEDDATE DATETIME  DEFAULT CURRENT_TIMESTAMP,
	USERID INTEGER(10) DEFAULT 1,
	PRIMARY KEY (AUDITID)
);
